{"version":3,"file":"static/js/948.b8a05954.chunk.js","mappings":"wRAGaA,EAASC,EAAAA,EAAAA,OAAH,2KASNC,EAAOD,EAAAA,EAAAA,GAAH,qJASJE,EAAiBF,EAAAA,EAAAA,OAAH,whBAqBdG,GAAYH,EAAAA,EAAAA,GAAOI,EAAAA,GAAPJ,CAAH,4O,4JCxCTK,EAAOL,EAAAA,EAAAA,IAAH,gSAcJM,EAAON,EAAAA,EAAAA,EAAH,4EAMJO,EAAQP,EAAAA,EAAAA,IAAH,4EAMLQ,EAAOR,EAAAA,EAAAA,IAAH,sQAUJS,EAAUT,EAAAA,EAAAA,IAAH,qJASPU,EAASV,EAAAA,EAAAA,IAAH,gIAQNW,EAAWX,EAAAA,EAAAA,EAAH,wIAQRY,EAAeZ,EAAAA,EAAAA,OAAH,4WAgBZa,EAAkBb,EAAAA,EAAAA,OAAH,4WAgBfc,EAAWd,EAAAA,EAAAA,IAAH,kJASRe,EAASf,EAAAA,EAAAA,IAAH,6HAQNgB,EAAUhB,EAAAA,EAAAA,IAAH,mQ,mFC5FPiB,EAAY,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UACpBC,GAAWC,EAAAA,EAAAA,MAEjB,GAAwCC,EAAAA,EAAAA,UAASH,EAAUI,WAA3D,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA4BH,EAAAA,EAAAA,UAASH,EAAUO,QAA/C,eAAOA,EAAP,KAAeC,EAAf,KAEMC,EAAkB,WACP,WAAXF,GACFC,EAAU,aACVF,GAAgB,SAAAI,GAAY,OAAIA,EAAe,CAAnB,MAE5BF,EAAU,UACVF,GAAgB,SAAAI,GAAY,OAAIA,EAAe,CAAnB,IAE/B,GAEDC,EAAAA,EAAAA,YAAU,WACRV,GAASW,EAAAA,EAAAA,KAAS,kBAAKZ,GAAN,IAAiBI,UAAWC,EAAcE,OAAAA,KAE5D,GAAE,CAACN,EAAUI,EAAcE,IAE5B,IAAMM,EAAYC,KAAKC,aAAa,SAEpC,OACE,UAAC5B,EAAD,YACE,SAACE,EAAD,CAAO2B,IAAKC,EAAYC,IAAI,gBAC5B,SAAC9B,EAAD,CAAM+B,KAAK,0BAAX,UACE,gBAAKH,I,y+BAAWE,IAAI,YAEtB,SAAC5B,EAAD,KACA,UAACC,EAAD,YACE,SAACK,EAAD,WACE,SAACE,EAAD,WACE,SAACD,EAAD,CAAQmB,IAAKhB,EAAUoB,OAAQF,IAAI,SAASG,MAAM,cAGtD,UAAC7B,EAAD,YACE,UAACC,EAAD,WAAWoB,EAAUS,OAAOtB,EAAUuB,QAAtC,cACA,UAAC9B,EAAD,WAAWoB,EAAUS,OAAOtB,EAAUI,WAAtC,mBAEoB,cAArBJ,EAAUO,QACT,SAACZ,EAAD,CAAiB6B,KAAK,SAASC,QAAShB,EAAxC,wBAIA,SAACf,EAAD,CAAc8B,KAAK,SAASC,QAAShB,EAArC,yBAOT,E,SCtEGiB,EAAY,YAgFT,IAAIC,EAAuB,SAA8BC,EAAGC,GACjE,OAAOD,IAAMC,CACd,EAqBM,SAASC,EAAeC,EAAMC,GACnC,IAAIC,EAAoD,kBAA3BD,EAAsCA,EAAyB,CAC1FE,cAAeF,GAEbG,EAAwBF,EAAgBC,cACxCA,OAA0C,IAA1BC,EAAmCR,EAAuBQ,EAC1EC,EAAwBH,EAAgBI,QACxCA,OAAoC,IAA1BD,EAAmC,EAAIA,EACjDE,EAAsBL,EAAgBK,oBACtCC,EA7BC,SAAkCL,GACvC,OAAO,SAAoCM,EAAMC,GAC/C,GAAa,OAATD,GAA0B,OAATC,GAAiBD,EAAKE,SAAWD,EAAKC,OACzD,OAAO,EAMT,IAFA,IAAIA,EAASF,EAAKE,OAETC,EAAI,EAAGA,EAAID,EAAQC,IAC1B,IAAKT,EAAcM,EAAKG,GAAIF,EAAKE,IAC/B,OAAO,EAIX,OAAO,CACR,CACF,CAYkBC,CAAyBV,GACtCW,EAAoB,IAAZR,EA/Gd,SAA8BS,GAC5B,IAAIC,EACJ,MAAO,CACLC,IAAK,SAAaC,GAChB,OAAIF,GAASD,EAAOC,EAAME,IAAKA,GACtBF,EAAMG,MAGRxB,CACR,EACDyB,IAAK,SAAaF,EAAKC,GACrBH,EAAQ,CACNE,IAAKA,EACLC,MAAOA,EAEV,EACDE,WAAY,WACV,OAAOL,EAAQ,CAACA,GAAS,EAC1B,EACDM,MAAO,WACLN,OAAQO,CACT,EAEJ,CAwF6BC,CAAqBhB,GAtFnD,SAAwBF,EAASS,GAC/B,IAAIU,EAAU,GAEd,SAASR,EAAIC,GACX,IAAIQ,EAAaD,EAAQE,WAAU,SAAUX,GAC3C,OAAOD,EAAOG,EAAKF,EAAME,IAC1B,IAED,GAAIQ,GAAc,EAAG,CACnB,IAAIV,EAAQS,EAAQC,GAOpB,OALIA,EAAa,IACfD,EAAQG,OAAOF,EAAY,GAC3BD,EAAQI,QAAQb,IAGXA,EAAMG,KACd,CAGD,OAAOxB,CACR,CAwBD,MAAO,CACLsB,IAAKA,EACLG,IAxBF,SAAaF,EAAKC,GACZF,EAAIC,KAASvB,IAEf8B,EAAQI,QAAQ,CACdX,IAAKA,EACLC,MAAOA,IAGLM,EAAQd,OAASL,GACnBmB,EAAQK,MAGb,EAaCT,WAXF,WACE,OAAOI,CACR,EAUCH,MARF,WACEG,EAAU,EACX,EAQF,CAmCgEM,CAAezB,EAASE,GAEvF,SAASwB,IACP,IAAIb,EAAQL,EAAMG,IAAIgB,WAEtB,GAAId,IAAUxB,EAAW,CAIvB,GAFAwB,EAAQnB,EAAKkC,MAAM,KAAMD,WAErB1B,EAAqB,CACvB,IAAIkB,EAAUX,EAAMO,aAChBc,EAAgBV,EAAQW,MAAK,SAAUpB,GACzC,OAAOT,EAAoBS,EAAMG,MAAOA,EACzC,IAEGgB,IACFhB,EAAQgB,EAAchB,MAEzB,CAEDL,EAAMM,IAAIa,UAAWd,EACtB,CAED,OAAOA,CACR,CAMD,OAJAa,EAASK,WAAa,WACpB,OAAOvB,EAAMQ,OACd,EAEMU,CACR,CC/ID,SAASM,EAAgBC,GACvB,IAAIC,EAAeC,MAAMC,QAAQH,EAAM,IAAMA,EAAM,GAAKA,EAExD,IAAKC,EAAaG,OAAM,SAAUC,GAChC,MAAsB,oBAARA,CACf,IAAG,CACF,IAAIC,EAAkBL,EAAaM,KAAI,SAAUF,GAC/C,MAAsB,oBAARA,EAAqB,aAAeA,EAAIG,MAAQ,WAAa,YAAcH,CAC1F,IAAEI,KAAK,MACR,MAAM,IAAIC,MAAM,kGAAoGJ,EAAkB,IACvI,CAED,OAAOL,CACR,CAEM,SAASU,EAAsBC,GACpC,IAAK,IAAIC,EAAOnB,UAAUtB,OAAQ0C,EAAyB,IAAIZ,MAAMW,EAAO,EAAIA,EAAO,EAAI,GAAIE,EAAO,EAAGA,EAAOF,EAAME,IACpHD,EAAuBC,EAAO,GAAKrB,UAAUqB,GAG/C,IAAIC,EAAiB,WACnB,IAAK,IAAIC,EAAQvB,UAAUtB,OAAQ4B,EAAQ,IAAIE,MAAMe,GAAQC,EAAQ,EAAGA,EAAQD,EAAOC,IACrFlB,EAAMkB,GAASxB,UAAUwB,GAG3B,IAEIC,EAFAC,EAAkB,EAOlBC,EAAwB,CAC1BC,oBAAgBtC,GAGduC,EAAavB,EAAMT,MAQvB,GAN0B,kBAAfgC,IACTF,EAAwBE,EAExBA,EAAavB,EAAMT,OAGK,oBAAfgC,EACT,MAAM,IAAIb,MAAM,qFAAuFa,EAAa,KAKtH,IAAIC,EAAwBH,EACxBI,EAAyBD,EAAsBF,eAC/CA,OAA4C,IAA3BG,EAAoCX,EAAyBW,EAM9EC,EAAsBxB,MAAMC,QAAQmB,GAAkBA,EAAiB,CAACA,GACxErB,EAAeF,EAAgBC,GAC/B2B,EAAqBf,EAAQjB,WAAM,EAAQ,CAAC,WAG9C,OAFAyB,IAEOG,EAAW5B,MAAM,KAAMD,UAC/B,GAAEkC,OAAOF,IAENG,EAAWjB,GAAQ,WAIrB,IAHA,IAAIkB,EAAS,GACT1D,EAAS6B,EAAa7B,OAEjBC,EAAI,EAAGA,EAAID,EAAQC,IAG1ByD,EAAOC,KAAK9B,EAAa5B,GAAGsB,MAAM,KAAMD,YAK1C,OADAyB,EAAcQ,EAAmBhC,MAAM,KAAMmC,EAE9C,IAeD,OAdAE,OAAOC,OAAOJ,EAAU,CACtBN,WAAYA,EACZI,mBAAoBA,EACpB1B,aAAcA,EACdiC,WAAY,WACV,OAAOf,CACR,EACDgB,eAAgB,WACd,OAAOf,CACR,EACDgB,oBAAqB,WACnB,OAAOhB,EAAkB,CAC1B,IAEIS,CACR,EAGD,OAAOb,CACR,CACM,I,EAAIA,EAAgCL,EAAsBnD,G,UCpGpD6E,EAAmB,SAAAC,GAAK,OAAIA,EAAMC,MAAMC,UAAhB,EAGxBC,EAAqB,SAAAH,GAAK,OAAIA,EAAMI,QAAQzG,MAAlB,EAE1B0G,EAAsB3B,EACjC,CAACqB,EAAkBI,IACnB,SAACF,EAAOK,GACN,OAAQA,GACN,KAAKC,EAAAA,EAAAA,IACH,OAAON,EACT,KAAKM,EAAAA,EAAAA,OACH,OAAON,EAAMO,QAAO,SAAAC,GAAI,MAAoB,WAAhBA,EAAK9G,MAAT,IAC1B,KAAK4G,EAAAA,EAAAA,UACH,OAAON,EAAMO,QAAO,SAAAC,GAAI,MAAoB,cAAhBA,EAAK9G,MAAT,IAC1B,QACE,OAAOsG,EAEZ,IChBUS,EAAY,WACvB,IAAMR,GAAaS,EAAAA,EAAAA,IAAYN,GAE/B,OACE,8BACGH,EAAWpE,OAAS,IACnB,SAAC,KAAD,UACGoE,EAAWjC,KAAI,SAAA7E,GACd,OACE,yBACE,SAACD,EAAD,CAAWC,UAAWA,KADfA,EAAUwH,GAItB,OAKV,E,UCrBYC,EAAQ3I,EAAAA,EAAAA,OAAH,mICIL4I,EAAe,WAC1B,IAAMzH,GAAWC,EAAAA,EAAAA,MAEXkH,GAASG,EAAAA,EAAAA,IAAYR,GAM3B,OACE,UAACU,EAAD,CAAOvE,MAAOkE,EAAQO,SALG,SAAAC,GACzB3H,GAAS4H,EAAAA,EAAAA,GAAgBD,EAAEE,OAAO5E,OACnC,EAGC,WACE,mBAAQ6E,aAAcZ,EAAAA,EAAAA,IAAtB,kBACA,mBAAQjE,MAAOiE,EAAAA,EAAAA,OAAf,qBACA,mBAAQjE,MAAOiE,EAAAA,EAAAA,UAAf,yBAGL,EC6BD,GAtCe,WAAO,IAAD,IACbN,GAAQU,EAAAA,EAAAA,IAAYZ,GAC1B,GAAsCxG,EAAAA,EAAAA,UAAS,GAA/C,eAAO6H,EAAP,KAAoBC,EAApB,KACMhI,GAAWC,EAAAA,EAAAA,OAEjBS,EAAAA,EAAAA,YAAU,WACRV,GAASiI,EAAAA,EAAAA,IAAWF,GACrB,GAAE,CAACA,EAAa/H,IAEjB,IAAMkI,GAAeC,EAAAA,EAAAA,UAAQ,WAG3B,OAFmB,GACGvB,EAAMnE,MAE7B,GAAE,CAACmE,IAMEwB,GAAWC,EAAAA,EAAAA,MACXC,GAAeC,EAAAA,EAAAA,QAAM,oBAACH,EAASzB,aAAV,aAAC,EAAgB6B,YAAjB,aAE3B,OACE,6BACE,UAAC,KAAD,YACE,SAAC,KAAD,CAAWC,GAAIH,EAAaI,QAA5B,sBACA,SAACjB,EAAD,QAEF,SAACJ,EAAD,IACCa,GAAgBtB,EAAMnE,OAAS,IAC9B,SAAC,KAAD,CAAgBlB,KAAK,SAASC,QAfjB,WACjBwG,GAAe,SAAAW,GAAI,OAAIA,EAAO,CAAX,GACpB,EAaK,yBAMP,C","sources":["components/TweetList/TweetList.styled.js","components/TweetCard/TweetCard.styled.js","components/TweetCard/TweetCard.jsx","../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","redux/selectors.js","components/TweetList/TweetList.jsx","components/StatusFilter/StatusFilter.styled.js","components/StatusFilter/StatusFilter.jsx","pages/Tweets.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const Header = styled.header`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  gap: 12px;\n  padding: 8px 0;\n  border-bottom: 2px solid #5736a3;\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  justify-content: center;\n  gap: 16px;\n  flex-wrap: wrap;\n  margin-bottom: 16px;\n  margin-top: 16px;\n`;\n\nexport const LoadMoreButton = styled.button`\n  margin: 16px auto;\n  padding: 8px 16px;\n  border-radius: 8px;\n  background-color: #5736a3;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  text-align: center;\n  display: flex;\n  justify-content: center;\n  color: #fff;\n  border: 0;\n  text-decoration: none;\n  cursor: pointer;\n  font-size: 18px;\n  line-height: 24px;\n  font-weight: 500;\n  min-width: 180px;\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n`;\n\nexport const TweetLink = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  gap: 4px;\n  padding: 8px 0;\n  color: black;\n  text-decoration: none;\n  font-weight: 500;\n  text-transform: uppercase;\n  :hover {\n    color: #5736a3;\n  }\n`;\n","import styled from '@emotion/styled';\n\nexport const Card = styled.div`\n  position: relative;\n  width: 380px;\n  height: 460px;\n  background: linear-gradient(\n    114.99deg,\n    #471ca9 -0.99%,\n    #5736a3 54.28%,\n    #4b2a99 78.99%\n  );\n  box-shadow: -2.5777px 6.87386px 20.6216px rgba(0, 0, 0, 0.23);\n  border-radius: 20px;\n`;\n\nexport const Logo = styled.a`\n  position: absolute;\n  top: 20px;\n  left: 20px;\n`;\n\nexport const Image = styled.img`\n  position: absolute;\n  top: 28px;\n  left: 36px;\n`;\n\nexport const Line = styled.div`\n  position: absolute;\n  top: 214px;\n  width: 380px;\n  height: 8px;\n  background: #ebd8ff;\n  box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.06),\n    inset 0px -1.71846px 3.43693px #ae7be3, inset 0px 3.43693px 2.5777px #fbf8ff;\n`;\n\nexport const UserBox = styled.div`\n  position: relative;\n  top: 222px;\n  height: 238px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const Titles = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 16px;\n  margin-top: 62px;\n`;\n\nexport const UserInfo = styled.p`\n  font-weight: 500;\n  font-size: 20px;\n  line-height: 24px;\n  text-transform: uppercase;\n  color: #ebd8ff;\n`;\n\nexport const FollowButton = styled.button`\n  padding: 14px 56px;\n  margin-top: 26px;\n  width: 196px;\n  background: #ebd8ff;\n  border: 0px solid transparent;\n  box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.25);\n  border-radius: 10.3108px;\n  font-weight: 600;\n  font-size: 18px;\n  line-height: 22px;\n  text-transform: uppercase;\n  color: #373737;\n  cursor: pointer;\n`;\n\nexport const FollowingButton = styled.button`\n  padding: 14px 39px;\n  margin-top: 26px;\n  width: 196px;\n  background: #5cd3a8;\n  border: 0px solid transparent;\n  box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.25);\n  border-radius: 10.3108px;\n  font-weight: 600;\n  font-size: 18px;\n  line-height: 22px;\n  text-transform: uppercase;\n  color: #373737;\n  cursor: pointer;\n`;\n\nexport const ImageBox = styled.div`\n  position: absolute;\n  top: -44px;\n  width: 80px;\n  height: 80px;\n  background-color: #5736a3;\n  overflow: hidden;\n`;\n\nexport const Avatar = styled.img`\n  position: absolute;\n  top: 9.42px;\n  left: 9.48px;\n  object-fit: cover;\n  border-radius: 50%;\n`;\n\nexport const Ellipse = styled.div`\n  width: 80px;\n  height: 80px;\n  background-color: #ebd8ff;\n  box-shadow: 0px 4.39163px 4.39163px rgba(0, 0, 0, 0.06),\n    inset 0px -2.19582px 4.39163px #ae7be3,\n    inset 0px 4.39163px 3.29372px #fbf8ff;\n  border-radius: 50%;\n`;\n","import { useEffect, useState } from 'react';\nimport {\n  Card,\n  Line,\n  Logo,\n  UserInfo,\n  UserBox,\n  Image,\n  FollowButton,\n  Titles,\n  FollowingButton,\n  ImageBox,\n  Avatar,\n  Ellipse,\n} from './TweetCard.styled';\nimport { useDispatch } from 'react-redux';\nimport { editUser } from 'redux/operations';\nimport logo from '../../images/Logo.png';\nimport background from '../../images/picture.png';\n\nexport const TweetCard = ({ tweetUser }) => {\n  const dispatch = useDispatch();\n\n  const [newFollowers, setNewFollowers] = useState(tweetUser.followers);\n  const [status, setStatus] = useState(tweetUser.status);\n\n  const updateFollowers = () => {\n    if (status === 'follow') {\n      setStatus('following');\n      setNewFollowers(prevFollower => prevFollower + 1);\n    } else {\n      setStatus('follow');\n      setNewFollowers(prevFollower => prevFollower - 1);\n    }\n  };\n\n  useEffect(() => {\n    dispatch(editUser({ ...tweetUser, followers: newFollowers, status }));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [dispatch, newFollowers, status]);\n\n  const numFormat = Intl.NumberFormat('en-US');\n\n  return (\n    <Card>\n      <Image src={background} alt=\"background\" />\n      <Logo href=\"https://goit.global/ua/\">\n        <img src={logo} alt=\"logo\" />\n      </Logo>\n      <Line />\n      <UserBox>\n        <ImageBox>\n          <Ellipse>\n            <Avatar src={tweetUser.avatar} alt=\"avatar\" width=\"62px\" />\n          </Ellipse>\n        </ImageBox>\n        <Titles>\n          <UserInfo>{numFormat.format(tweetUser.tweets)} Tweets</UserInfo>\n          <UserInfo>{numFormat.format(tweetUser.followers)} Followers</UserInfo>\n        </Titles>\n        {tweetUser.status === 'following' ? (\n          <FollowingButton type=\"button\" onClick={updateFollowers}>\n            Following\n          </FollowingButton>\n        ) : (\n          <FollowButton type=\"button\" onClick={updateFollowers}>\n            Follow\n          </FollowButton>\n        )}\n      </UserBox>\n    </Card>\n  );\n};\n","// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import { createSelector } from '@reduxjs/toolkit';\nimport { statusFilters } from './constants';\n\nexport const selectTweetUsers = state => state.users.tweetUsers;\nexport const selectIsLoading = state => state.users.isLoading;\nexport const selectError = state => state.users.error;\nexport const selectStatusFilter = state => state.filters.status;\n\nexport const selectVisibleTweets = createSelector(\n  [selectTweetUsers, selectStatusFilter],\n  (users, statusFilter) => {\n    switch (statusFilter) {\n      case statusFilters.all:\n        return users;\n      case statusFilters.follow:\n        return users.filter(user => user.status === 'follow');\n      case statusFilters.following:\n        return users.filter(user => user.status === 'following');\n      default:\n        return users;\n    }\n  }\n);\n","import { TweetCard } from 'components/TweetCard/TweetCard';\nimport { List } from './TweetList.styled';\nimport { useSelector } from 'react-redux';\nimport { selectVisibleTweets } from 'redux/selectors';\n\nexport const TweetList = () => {\n  const tweetUsers = useSelector(selectVisibleTweets);\n\n  return (\n    <>\n      {tweetUsers.length > 0 && (\n        <List>\n          {tweetUsers.map(tweetUser => {\n            return (\n              <li key={tweetUser.id}>\n                <TweetCard tweetUser={tweetUser} />\n              </li>\n            );\n          })}\n        </List>\n      )}\n    </>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Field = styled.select`\n  width: 160px;\n  border: 1px solid #5736a3;\n  border-radius: 8px;\n  padding: 8px;\n  cursor: pointer;\n`;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { statusFilters } from '../../redux/constants';\nimport { selectStatusFilter } from 'redux/selectors';\nimport { setStatusFilter } from 'redux/filterSlice';\nimport { Field } from './StatusFilter.styled';\n\nexport const StatusFilter = () => {\n  const dispatch = useDispatch();\n\n  const filter = useSelector(selectStatusFilter);\n\n  const handleFilterChange = e => {\n    dispatch(setStatusFilter(e.target.value));\n  };\n\n  return (\n    <Field value={filter} onChange={handleFilterChange}>\n      <option defaultValue={statusFilters.all}>All</option>\n      <option value={statusFilters.follow}>Follow</option>\n      <option value={statusFilters.following}>Following</option>\n    </Field>\n  );\n};\n","import { useEffect, useMemo, useRef, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { TweetList } from 'components/TweetList/TweetList';\nimport {\n  Header,\n  LoadMoreButton,\n  TweetLink,\n} from 'components/TweetList/TweetList.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectTweetUsers } from 'redux/selectors';\nimport { fetchUsers } from 'redux/operations';\nimport { StatusFilter } from 'components/StatusFilter/StatusFilter';\n\nconst Tweets = () => {\n  const users = useSelector(selectTweetUsers);\n  const [currentPage, setCurrentPage] = useState(1);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchUsers(currentPage));\n  }, [currentPage, dispatch]);\n\n  const hasMorePages = useMemo(() => {\n    const totalUsers = 12;\n    const selectedUsers = users.length;\n    return totalUsers > selectedUsers;\n  }, [users]);\n\n  const handleLoad = () => {\n    setCurrentPage(page => page + 1);\n  };\n\n  const location = useLocation();\n  const backLinkHref = useRef(location.state?.from ?? `/`);\n\n  return (\n    <main>\n      <Header>\n        <TweetLink to={backLinkHref.current}>Go back</TweetLink>\n        <StatusFilter />\n      </Header>\n      <TweetList />\n      {hasMorePages && users.length > 0 && (\n        <LoadMoreButton type=\"button\" onClick={handleLoad}>\n          Load more\n        </LoadMoreButton>\n      )}\n    </main>\n  );\n};\n\nexport default Tweets;\n"],"names":["Header","styled","List","LoadMoreButton","TweetLink","Link","Card","Logo","Image","Line","UserBox","Titles","UserInfo","FollowButton","FollowingButton","ImageBox","Avatar","Ellipse","TweetCard","tweetUser","dispatch","useDispatch","useState","followers","newFollowers","setNewFollowers","status","setStatus","updateFollowers","prevFollower","useEffect","editUser","numFormat","Intl","NumberFormat","src","background","alt","href","avatar","width","format","tweets","type","onClick","NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","value","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","name","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","selectTweetUsers","state","users","tweetUsers","selectStatusFilter","filters","selectVisibleTweets","statusFilter","statusFilters","filter","user","TweetList","useSelector","id","Field","StatusFilter","onChange","e","setStatusFilter","target","defaultValue","currentPage","setCurrentPage","fetchUsers","hasMorePages","useMemo","location","useLocation","backLinkHref","useRef","from","to","current","page"],"sourceRoot":""}